using System.IO;
using System.Linq;
using Alkahest.Core.Data;

namespace TeraDataExtractor
{
    /// <summary>
    /// Extracts dungeon names - maybe they're already contained in the file generated by RegionExtractor?
    /// Structure: id, name
    /// </summary>
    public class DungeonsExtractor
    {
        private string RootFolder = Program.SourcePath;
        private string OutFolder = Path.Combine(Program.OutputPath, "dungeons");

        public class Dungeon
        {
            public int Id { get; set; }
            public string Name { get; set; }
            public int Coins { get; set; }

            public string ToTsv()
            {
                return $"{Id}\t{Name}\t{Coins}";
            }
        }

        public DungeonsExtractor(string region, DataCenter dc)
        {
            Directory.CreateDirectory(OutFolder);
            var strings = (from str in dc.Root.Children("StrSheet_Dungeon").SelectMany(x => x.Children("String"))
                join constr in dc.Root.Child("DungeonConstraint").Child("ConstraintList").Children("Constraint") on str["id", 0].ToInt32() equals constr["continentId", 0].ToInt32() into dungeons
                from dungeon in dungeons.DefaultIfEmpty()
                let id = str["id", 0].ToInt32()
                let name = str["string", ""].AsString.Replace("\n", "&#xA;") ?? ""
                let coins = dungeon?["requiredActPoint", 0].ToInt32()??0
                where name != "" && (id > 999 && id < 5000 || id >6000 && id < 10000)
                select new Dungeon{Id = id, Name=name, Coins = coins}).ToList();

            File.WriteAllLines(Path.Combine(OutFolder, $"dungeons-{region}.tsv"), strings.OrderBy(x => x.Id).Select(x => x.ToTsv().Replace("\r", "")));
        }
    }
}
